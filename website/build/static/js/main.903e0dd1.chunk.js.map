{"version":3,"sources":["services/apis.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["syncData","data","a","fetch","BASE_URL","method","headers","body","JSON","stringify","response","json","console","log","App","useState","lastUpdate","content","setData","useEffect","handleSync","responseData","prev","_prev","className","style","height","href","fontSize","onClick","name","id","minWidth","minHeight","resize","border","cols","rows","value","onChange","event","target","Date","toString","placeholder","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAUaA,G,MAAQ,uCAAG,WACtBC,GADsB,eAAAC,EAAA,+EAIGC,MAAMC,6CAAmB,CAC9CC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUR,KATH,cAIdS,EAJc,yBAYbA,EAASC,QAZI,uCAcpBC,QAAQC,IAAI,WAAZ,MAdoB,iFAAH,uDCqENC,EAtEH,WAAO,IAAD,EACQC,mBAAmB,CACzCC,WAAY,GACZC,QAAS,KAHK,mBACThB,EADS,KACHiB,EADG,KAMhBC,qBAAU,WACRC,MAEC,IAEH,IAWMA,EAAU,uCAAG,4BAAAlB,EAAA,sEACUF,EAASC,GADnB,OACXoB,EADW,OAGbpB,EAAKe,aAAeK,EAAapB,KAAKe,YACxCE,GAAQ,SAACI,GACP,IAAMC,EAAK,eAAQD,GAGnB,OAFAC,EAAMN,QAAUI,EAAapB,KAAKgB,QAClCM,EAAMP,WAAaK,EAAapB,KAAKe,WAC9BO,KAIXX,QAAQC,IAAI,cAAeQ,GAZV,2CAAH,qDAehB,OACE,gCACE,sBAAKG,UAAU,6BAA6BC,MAAO,CAAEC,OAAQ,OAA7D,UACE,oBAAGF,UAAU,eAAeG,KAAK,IAAIF,MAAO,CAAEG,SAAU,SAAxD,UACE,qCADF,WAGA,8BACE,wBAAQJ,UAAU,uBAAuBK,QAAST,EAAlD,uBAKJ,qBAAKK,MAAO,CAAEC,OAAQ,QAAtB,SACE,0BACEI,KAAK,OACLC,GAAG,gBACHN,MAAO,CACLO,SAAU,OACVC,UAAW,OACXC,OAAQ,OACRC,OAAQ,QAEVC,KAAM,GACNC,KAAM,GACNC,MAAOrC,EAAKgB,QACZsB,SAnDa,SAACC,GAAmD,IAC/DF,EAAUE,EAAMC,OAAhBH,MAERpB,GAAQ,SAACI,GACP,IAAMC,EAAK,eAAQD,GAGnB,OAFAC,EAAMN,QAAUqB,EAChBf,EAAMP,YAAa,IAAI0B,MAAOC,WACvBpB,MA6CHqB,YAAY,wBC1DPC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.903e0dd1.chunk.js","sourcesContent":["import { DataType } from \"../App\";\r\n\r\n// const BASE_URL = \"http://localhost:8000/sync\";\r\nconst BASE_URL = \"https://copypaste01.herokuapp.com/api/\";\r\n\r\ninterface SyncDataResponseType {\r\n  message: string;\r\n  data: DataType;\r\n}\r\n\r\nexport const syncData = async (\r\n  data: DataType\r\n): Promise<SyncDataResponseType> => {\r\n  try {\r\n    const response = await fetch(BASE_URL + \"sync\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(data),\r\n    });\r\n\r\n    return response.json();\r\n  } catch (error) {\r\n    console.log(\"Error : \", error);\r\n\r\n    return error;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { syncData } from \"./services/apis\";\n\nexport interface DataType {\n  lastUpdate: string;\n  content: string;\n}\n\nconst App = () => {\n  const [data, setData] = useState<DataType>({\n    lastUpdate: \"\",\n    content: \"\",\n  });\n\n  useEffect(() => {\n    handleSync();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    const { value } = event.target;\n\n    setData((prev) => {\n      const _prev = { ...prev };\n      _prev.content = value;\n      _prev.lastUpdate = new Date().toString();\n      return _prev;\n    });\n  };\n\n  const handleSync = async () => {\n    const responseData = await syncData(data);\n\n    if (data.lastUpdate !== responseData.data.lastUpdate) {\n      setData((prev) => {\n        const _prev = { ...prev };\n        _prev.content = responseData.data.content;\n        _prev.lastUpdate = responseData.data.lastUpdate;\n        return _prev;\n      });\n    }\n\n    console.log(\"Response : \", responseData);\n  };\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark bg-dark\" style={{ height: \"7vh\" }}>\n        <a className=\"navbar-brand\" href=\"/\" style={{ fontSize: \"2.8vh\" }}>\n          <b>COPY</b>Paste\n        </a>\n        <div>\n          <button className=\"btn btn-light btn-sm\" onClick={handleSync}>\n            Sync\n          </button>\n        </div>\n      </nav>\n      <div style={{ height: \"93vh\" }}>\n        <textarea\n          name=\"data\"\n          id=\"dataContainer\"\n          style={{\n            minWidth: \"100%\",\n            minHeight: \"100%\",\n            resize: \"none\",\n            border: \"none\",\n          }}\n          cols={30}\n          rows={10}\n          value={data.content}\n          onChange={handleChange}\n          placeholder=\"Paste here...\"\n        ></textarea>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}